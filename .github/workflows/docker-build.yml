name: Build Docker Image

on:
  push:
    branches:
      - main
    paths:
      - 'Dockerfile.minimal'
      - 'app/**'
      - 'src/**'
      - 'requirements.txt'
  pull_request:
    branches:
      - main
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          lfs: true  # Enable Git LFS to pull large model files
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Check for model files
        id: check-models
        run: |
          if [ -f "app/models/teacher_model.pth" ] && [ -f "app/models/student_model.pth" ]; then
            echo "Models exist in the repository"
            echo "models_exist=true" >> $GITHUB_OUTPUT
          else
            echo "Models not found in the repository"
            echo "models_exist=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Create minimal Dockerfile
        run: |
          cat > Dockerfile.minimal << 'ENDOFFILE'
FROM python:3.9-slim

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
RUN pip install --no-cache-dir streamlit torch torchvision pyyaml

# Create necessary directories
RUN mkdir -p /app/models /app/src /app/app

# Copy app files
COPY app/streamlit_app.py /app/app/
COPY app/sample_images /app/app/sample_images/
COPY src /app/src/
COPY config.yaml /app/

# Copy model files if they exist
COPY app/models/ /app/models/

# Set environment variables
ENV PYTHONPATH=/app
ENV STREAMLIT_SERVER_PORT=8501
ENV STREAMLIT_SERVER_ADDRESS=0.0.0.0

# Expose port for Streamlit
EXPOSE 8501

# Run the Streamlit app
CMD ["streamlit", "run", "/app/app/streamlit_app.py", "--server.port=8501", "--server.address=0.0.0.0"]
ENDOFFILE
          
      - name: Build Docker image
        run: |
          docker build -t distillnet:test -f Dockerfile.minimal .
        
      - name: Test Docker image
        run: |
          # Run the container in the background
          docker run -d --name distillnet-test -p 8501:8501 distillnet:test
          
          # Wait for the container to start
          sleep 10
          
          # Check the container logs
          docker logs distillnet-test
          
          # Check if the container is running
          if docker ps | grep distillnet-test; then
            echo "Container is running successfully"
          else
            echo "Container failed to start"
            exit 1
          fi
          
          # Stop the container
          docker stop distillnet-test
          docker rm distillnet-test 